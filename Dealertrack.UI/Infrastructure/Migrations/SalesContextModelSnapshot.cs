// <auto-generated />
using System;
using Dealertrack.Sales.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Dealertrack.UI.Infrastructure.Migrations
{
    [DbContext(typeof(SalesContext))]
    partial class SalesContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("Relational:Sequence:ordering.saleseq", "'saleseq', 'ordering', '1', '10', '', '', 'Int64', 'False'")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Dealertrack.Sales.Domain.AggregatesModel.OrderAggregate.Sale", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:HiLoSequenceName", "saleseq")
                        .HasAnnotation("SqlServer:HiLoSequenceSchema", "ordering")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.SequenceHiLo);

                    b.Property<string>("CustomerName")
                        .IsRequired();

                    b.Property<DateTime>("Date");

                    b.Property<int>("DealNumber");

                    b.Property<string>("DealershipName")
                        .IsRequired();

                    b.Property<decimal>("Price");

                    b.Property<int>("SaleStatusId");

                    b.Property<string>("Vehicle")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("SaleStatusId");

                    b.ToTable("sales","ordering");
                });

            modelBuilder.Entity("Dealertrack.Sales.Domain.AggregatesModel.OrderAggregate.SaleStatus", b =>
                {
                    b.Property<int>("Id")
                        .HasDefaultValue(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200);

                    b.HasKey("Id");

                    b.ToTable("salestatus","ordering");

                    b.HasData(
                        new { Id = 1, Name = "Paid" },
                        new { Id = 2, Name = "Pending" },
                        new { Id = 3, Name = "Cancelled" }
                    );
                });

            modelBuilder.Entity("Dealertrack.Sales.Domain.AggregatesModel.OrderAggregate.Sale", b =>
                {
                    b.HasOne("Dealertrack.Sales.Domain.AggregatesModel.OrderAggregate.SaleStatus", "SaleStatus")
                        .WithMany()
                        .HasForeignKey("SaleStatusId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
